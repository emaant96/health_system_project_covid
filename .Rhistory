# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
plot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
matplot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
matplot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
matplot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
matplot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
Day <- 0:(length(Infected)-1)
require(deSolve)
DatasetCovid <- read.csv(url('https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv'))
Infected <-  DatasetCovid$totale_positivi[150:360]
Rimossi <- DatasetCovid$dimessi_guariti[150:360] + DatasetCovid$deceduti[150:360] - DatasetCovid$dimessi_guariti[150] - DatasetCovid$deceduti[150]
Day <- 0:(length(Infected)-1)
N <- 59000000 * 0.05
lossArray <- matrix(0,20,4);
counter <- 1
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
matplot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
# SIR Model
N <- 59000000 * 0.05
beta <- 0.067
gamma <- 0.027
S0 <- N - Infected[1] - Rimossi[1]
I0 <- Infected[1]
R0 <- Rimossi[1];
plot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
closed.sir.model <- function (t, x, params) {
S <- x[1]
I <- x[2]
R <- x[3]
beta <- params[1]
gamma <- params[2]
dS <- -beta/N*S*I
dI <- beta/N*S*I-gamma*I
dR <- gamma*I
list(c(dS,dI,dR))
}
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
plot(Day,
Infected,
type='b',
xlab='Day',
ylab='I(t)',
col='red'
)
t <- seq(1,350,by=1)
mod.pred<-as.data.frame(
ode(
c(S=S0,I=I0,R=R0),
times=t,
closed.sir.model,
c(beta, gamma),
hmax=1/120)
);
lines(mod.pred$I~t)
matplot(
t,
mod.pred[,2:4],
type = "l",
xlab = "Time",
ylab = "Susceptibles and Recovereds",
main = "SIR Model, COVID-19, Italy, Estimated",
lwd = 1,
lty = 1,
bty = "l",
col = 2:4
)
legend(
x= "right",
y=0.92,
c("Susceptibles", "Infecteds", "Recovereds"),
pch = 1,
col = 2:4
)
View(DatasetCovid)
exec_optim = false
exec_optim = FALSE
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(mod.pred)
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(DatasetCovid)
exec_optim = TRUE
debugSource("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
force(x)
force(t)
force(params)
times
Day
params0
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(lossArray)
View(lossArray)
View(mod.pred)
View(lossArray)
View(fit)
View(lossArray)
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(lossArray)
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(lossArray)
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
debugSource("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
source("~/UNIPG/Data Science for Health Systems/Progetto tesina/progetto_ds/SIR_param_estim2.R")
View(DatasetCovid)
